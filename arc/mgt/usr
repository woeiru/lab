#!/bin/bash

# =============================================================================
# User Management Wrapper Functions
# =============================================================================
#
# ARCHITECTURAL DESIGN:
# This wrapper module maintains strict separation of concerns between pure 
# functions and environmental dependencies. Pure functions in lib/ops/usr 
# contain no global variables or environmental assumptions, while wrapper 
# functions here handle global variable extraction and environmental setup.
#
# DESIGN PRINCIPLES:
# - Pure functions (lib/ops/usr): No global dependencies, explicit parameters
# - ARCHIVED: Legacy wrapper functions (src/mgt/usr): Extracted globals, called pure functions
# - REPLACED BY: DIC operations (src/dic/ops): Unified interface with dependency injection
# - Clean separation: Environmental concerns isolated from business logic
# - Testability: Pure functions easily unit tested, wrappers handle integration
#
# PATTERN:
# wrapper_function() {
#     source "${LIB_OPS}/usr"    # Load pure functions
#     usr_function "$@"          # Call with explicit parameters
# }
#
# USAGE:
# Source this module to access user management wrapper functions that handle
# global variable extraction and environmental setup before calling pure
# user management operations.
# =============================================================================

# -----------------------------------------------------------------------------
# Variable Creation (for function analysis tools)
# -----------------------------------------------------------------------------
# Create variables representing each wrapper function to enable discovery
# by automated analysis tools and function inventory systems.

usr_fun_w="User management fundamental operations wrapper"
usr_var_w="User management variable setup wrapper"
usr_ckp_w="Check user privileges wrapper"
usr_vsf_w="Validate sudo functionality wrapper"
usr_cff_w="Check file/folder permissions wrapper"
usr_duc_w="Determine user context wrapper"
usr_cif_w="Create initial configuration wrapper"
usr_rsf_w="Reset sudo functionality wrapper"
usr_rsd_w="Reset sudo daemon wrapper"
usr_swt_w="Switch user context wrapper"
usr_adr_w="Add user to docker group wrapper"
usr_cap_w="Check administrative privileges wrapper"
usr_rif_w="Run initialization functions wrapper"
usr_ans_w="Administrative notification system wrapper"

# -----------------------------------------------------------------------------
# Wrapper Functions
# -----------------------------------------------------------------------------
# Each wrapper function sources the pure library and calls the corresponding
# pure function with explicit parameters, maintaining architectural separation.

usr_fun_w() {
    source "${LIB_OPS}/usr"
    usr_fun "$@"
}

usr_var_w() {
    source "${LIB_OPS}/usr"
    usr_var "$@"
}

usr_ckp_w() {
    source "${LIB_OPS}/usr"
    usr_ckp "$@"
}

usr_vsf_w() {
    source "${LIB_OPS}/usr"
    usr_vsf "$@"
}

usr_cff_w() {
    source "${LIB_OPS}/usr"
    usr_cff "$@"
}

usr_duc_w() {
    source "${LIB_OPS}/usr"
    usr_duc "$@"
}

usr_cif_w() {
    source "${LIB_OPS}/usr"
    usr_cif "$@"
}

usr_rsf_w() {
    source "${LIB_OPS}/usr"
    usr_rsf "$@"
}

usr_rsd_w() {
    source "${LIB_OPS}/usr"
    usr_rsd "$@"
}

usr_swt_w() {
    source "${LIB_OPS}/usr"
    usr_swt "$@"
}

usr_adr_w() {
    source "${LIB_OPS}/usr"
    usr_adr "$@"
}

usr_cap_w() {
    source "${LIB_OPS}/usr"
    usr_cap "$@"
}

usr_rif_w() {
    source "${LIB_OPS}/usr"
    usr_rif "$@"
}

usr_ans_w() {
    source "${LIB_OPS}/usr"
    usr_ans "$@"
}

# -----------------------------------------------------------------------------
# Function Inventory
# -----------------------------------------------------------------------------
# Complete list of user management wrapper functions available in this module:
#
# usr_fun_w  - User management fundamental operations wrapper
# usr_var_w  - User management variable setup wrapper
# usr_ckp_w  - Check user privileges wrapper
# usr_vsf_w  - Validate sudo functionality wrapper
# usr_cff_w  - Check file/folder permissions wrapper
# usr_duc_w  - Determine user context wrapper
# usr_cif_w  - Create initial configuration wrapper
# usr_rsf_w  - Reset sudo functionality wrapper
# usr_rsd_w  - Reset sudo daemon wrapper
# usr_swt_w  - Switch user context wrapper
# usr_adr_w  - Add user to docker group wrapper
# usr_cap_w  - Check administrative privileges wrapper
# usr_rif_w  - Run initialization functions wrapper
# usr_ans_w  - Administrative notification system wrapper
#
# Total: 14 wrapper functions
# Architecture: Clean separation between pure functions and environmental concerns
# =============================================================================

# Usage Examples:
# source "${SRC_MGT}/usr"
# usr_ckp_w                     # Check current user privileges
# usr_vsf_w                     # Validate sudo functionality
# usr_cap_w                     # Check administrative privileges
# usr_swt_w "target_user"       # Switch to target user context

# Testing:
# All wrapper functions can be tested by verifying they properly source
# pure functions and pass through parameters without modification.
