#!/bin/bash
# Runtime Dependencies Management (rde)
# Dependencies: None
# Purpose: Declares runtime dependencies between functions and modules

# Declare runtime requirement variables
declare -gA FUNCTION_DEPENDENCIES
declare -ga REGISTERED_FUNCTIONS
declare -gA FUNCTION_MODULES

# Initialize core function dependencies
FUNCTION_DEPENDENCIES=(
    ["process_error"]="err"
    ["log_message"]="lo1"
    ["debug_message"]="lo2"
    ["start_timer"]="tme"
    ["stop_timer"]="tme"
    ["handle_error"]="err,lo1"
    ["log_with_timer"]="lo1,tme"
    ["debug_with_timer"]="lo2,tme"
    ["set_static"]="err,lo1"  # Assuming they might use error/logging
    ["set_dynamic"]="err,lo1" # Assuming they might use error/logging
    ["set_aliaswrap"]="err,lo1" # Assuming they might use error/logging
)

# Initialize registered functions array
REGISTERED_FUNCTIONS=(
    "process_error"
    "log_message"
    "debug_message"
    "start_timer"
    "stop_timer"
    "handle_error"
    "log_with_timer"
    "debug_with_timer"
    "set_static"
    "set_dynamic"
    "set_aliaswrap"
)

# Initialize function module mappings
FUNCTION_MODULES=(
    ["process_error"]="${BASE_DIR}/lib/core/err"
    ["log_message"]="${BASE_DIR}/lib/util/lo1"
    ["debug_message"]="${BASE_DIR}/lib/util/lo2"
    ["start_timer"]="${BASE_DIR}/lib/util/tme"
    ["stop_timer"]="${BASE_DIR}/lib/util/tme"
    ["handle_error:err"]="${BASE_DIR}/lib/core/err"
    ["handle_error:lo1"]="${BASE_DIR}/lib/util/lo1"
    ["log_with_timer:lo1"]="${BASE_DIR}/lib/util/lo1"
    ["log_with_timer:tme"]="${BASE_DIR}/lib/util/tme"
    ["debug_with_timer:lo2"]="${BASE_DIR}/lib/util/lo2"
    ["debug_with_timer:tme"]="${BASE_DIR}/lib/util/tme"
    ["set_static"]="${BASE_DIR}/lib/alias/static"
    ["set_dynamic"]="${BASE_DIR}/lib/alias/dynamic"
    ["set_aliaswrap"]="${BASE_DIR}/lib/alias/wrap"
)

# Export the dependency arrays
export FUNCTION_DEPENDENCIES
export REGISTERED_FUNCTIONS
export FUNCTION_MODULES
