#!/bin/bash
#
# -----------------------------------------------------------------------------
# Runtime Initialization Constants
# -----------------------------------------------------------------------------
# Purpose:     Define all runtime constants and variables used across the system.
# File:        .lab/cfg/core/ric
#
# Description: This file initializes global constants and variables for file paths,
#              logging configurations, directory structures, and other runtime
#              parameters essential for the 'lab' project. It serves as the
#              central repository for system-wide settings.
#
# Dependencies: None. Assumes BASE_DIR may be predefined in the sourcing
#               environment if used by variables within this file.
#
# Usage:       Sourced during system initialization (e.g., by .lab/bin/init)
#              to establish the runtime environment.
#
# Notes:       Review and update paths and default values as per deployment needs.
# -----------------------------------------------------------------------------


# Level 1 directories
declare -g LAB_DIR
# Determine LAB_DIR based on ric's location to ensure it's independent of CWD
# Optimized approach - reduce from 3 subshells to 1 using parameter expansion
if [[ -z "$LAB_DIR" ]]; then
    # Single subshell operation using BASH_SOURCE directly with parameter expansion
    LAB_DIR="$(cd "${BASH_SOURCE[0]%/*}/../.." && pwd)"
fi
export LAB_DIR 

# Runtime files - consolidated into init file
declare -ga RC_FILES=()
export RC_FILES

# Runtime configuration files - consolidated into init file
declare -A rc=()
export rc

# Constants files
declare -g MDE_FILE RDE_FILE RUC_FILE
MDE_FILE="$DIC_DIR/mde"
RDC_FILE="$DIC_DIR/rdc"
RIC_FILE="$DIC_DIR/ric"
export MDE_FILE RDC_FILE RIC_FILE

# Log and temp file paths
declare -g LOG_DIR TMP_DIR
LOG_DIR="${LOG_DIR:-${BASE_DIR}/.log}"
TMP_DIR="${TMP_DIR:-${BASE_DIR}/.tmp}"
export LOG_DIR TMP_DIR

# Log files
declare -g ERROR_LOG ERROR_COUNT_FILE ERROR_STATE_FILE
declare -g LOG_STATE_FILE LOG_DEBUG_FILE
declare -g LOG_FILE # For lo1 module
declare -g TME_STATE_FILE TME_LEVELS_FILE TME_LOG_FILE
ERROR_LOG="${LOG_DIR}/err.log"
ERROR_COUNT_FILE="${TMP_DIR}/err_count"
ERROR_STATE_FILE="${TMP_DIR}/err_state"
LOG_STATE_FILE="${TMP_DIR}/lo1_state" # Changed from log_state
LOG_DEBUG_FILE="${LOG_DIR}/debug.log"
LOG_FILE="${LOG_DIR}/lo1.log" # Definition for lo1.log
TME_STATE_FILE="${TMP_DIR}/tme_state"
TME_LEVELS_FILE="${TMP_DIR}/tme_levels"
TME_LOG_FILE="${LOG_DIR}/tme.log"
export ERROR_LOG ERROR_COUNT_FILE ERROR_STATE_FILE
export LOG_STATE_FILE LOG_DEBUG_FILE
export LOG_FILE
export TME_STATE_FILE TME_LEVELS_FILE TME_LOG_FILE

# Environment configuration path
declare -g CFG_ENV_DIR
CFG_ENV_DIR="${LAB_DIR}/cfg/env"
export CFG_ENV_DIR

# Master environment configuration
declare -g SITE_NAME ENVIRONMENT_NAME NODE_NAME
SITE_NAME="${SITE_NAME:-site1}"           # Default to site1, can be overridden
ENVIRONMENT_NAME="${ENVIRONMENT_NAME:-prod}" # Default to prod, can be overridden  
NODE_NAME="${NODE_NAME:-$(hostname)}"     # Default to current hostname
export SITE_NAME ENVIRONMENT_NAME NODE_NAME

# Site-wide configuration file path for depl scripts
declare -g SITE_CONFIG_FILE
SITE_CONFIG_FILE="${CFG_ENV_DIR}/${SITE_NAME}"
export SITE_CONFIG_FILE

# Environment-specific override files (loaded after base config)
declare -g ENV_OVERRIDE_FILE NODE_OVERRIDE_FILE
ENV_OVERRIDE_FILE="${CFG_ENV_DIR}/${SITE_NAME}-${ENVIRONMENT_NAME}"
NODE_OVERRIDE_FILE="${CFG_ENV_DIR}/${SITE_NAME}-${NODE_NAME}"
export ENV_OVERRIDE_FILE NODE_OVERRIDE_FILE

# Deployment function library path
declare -g LIB_OPS_DIR
LIB_OPS_DIR="${LAB_DIR}/lib/ops"
export LIB_OPS_DIR

# Deployment function library path
declare -g LIB_AUX_DIR
LIB_AUX_DIR="${LAB_DIR}/lib/aux"
export LIB_AUX_DIR

# Core library path
declare -g LIB_CORE_DIR
LIB_CORE_DIR="${LAB_DIR}/lib/core"
export LIB_CORE_DIR

# Utility library path
declare -g LIB_UTL_DIR
LIB_UTL_DIR="${LAB_DIR}/lib/utl"
export LIB_UTL_DIR

# Alias configuration path
declare -g CFG_ALI_DIR
CFG_ALI_DIR="${LAB_DIR}/cfg/ali"
export CFG_ALI_DIR

# Generation directory for gen scripts
declare -g SRC_SET_DIR
SRC_SET_DIR="${LAB_DIR}/src/set"
export SRC_SET_DIR

# Management wrapper functions directory
declare -g SRC_MGT_DIR
SRC_MGT_DIR="${LAB_DIR}/src/mgt"
export SRC_MGT_DIR

# Runtime configuration
declare -g CACHE_CLEANUP_INTERVAL
CACHE_CLEANUP_INTERVAL=300  # 5 minutes
export CACHE_CLEANUP_INTERVAL

# Generation folders
declare -ga GENERATION_FOLDERS
GENERATION_FOLDERS=(lib/ops cfg/env src/set)
export GENERATION_FOLDERS

# Flag to indicate constants are loaded
declare -g CONS_LOADED=1
export CONS_LOADED

# Master switch for all terminal output.
# Set to "on" for verbose output, "off" for quiet terminal.
# File logging is generally unaffected by this setting.
declare -g MASTER_TERMINAL_VERBOSITY="on"
export MASTER_TERMINAL_VERBOSITY

# Controls terminal verbosity for early init and verification debug_log
# Set to "on" for verbose output, "off" for quiet terminal.
# Requires MASTER_TERMINAL_VERBOSITY to also be "on".
declare -g DEBUG_LOG_TERMINAL_VERBOSITY="on"
export DEBUG_LOG_TERMINAL_VERBOSITY

# Controls terminal verbosity for the lo1 advanced logging module
# Set to "on" for verbose output, "off" for quiet terminal.
# Requires MASTER_TERMINAL_VERBOSITY to also be "on".
declare -g LO1_LOG_TERMINAL_VERBOSITY="on"
export LO1_LOG_TERMINAL_VERBOSITY

# Controls terminal verbosity for the err error handling module
# Set to "on" for verbose output, "off" for quiet terminal.
# Requires MASTER_TERMINAL_VERBOSITY to also be "on".
declare -g ERR_TERMINAL_VERBOSITY="on"
export ERR_TERMINAL_VERBOSITY

# Controls terminal verbosity for the tme timing module
# Set to "on" for verbose output, "off" for quiet terminal.
# Requires MASTER_TERMINAL_VERBOSITY to also be "on".
declare -g TME_TERMINAL_VERBOSITY="on"
export TME_TERMINAL_VERBOSITY

  # TME Module Nested Terminal Output Controls
  # Individual switches for specific TME module outputs
  # All require both MASTER_TERMINAL_VERBOSITY and TME_TERMINAL_VERBOSITY to be "on"
  
  # Controls terminal output for TME timing reports
  declare -g TME_REPORT_TERMINAL_OUTPUT="on"
  export TME_REPORT_TERMINAL_OUTPUT
  
  # Controls terminal output for TME timing measurements
  declare -g TME_TIMING_TERMINAL_OUTPUT="on"
  export TME_TIMING_TERMINAL_OUTPUT
  
  # Controls terminal output for TME debug information
  declare -g TME_DEBUG_TERMINAL_OUTPUT="on"
  export TME_DEBUG_TERMINAL_OUTPUT
  
  # Controls terminal output for TME status updates
  declare -g TME_STATUS_TERMINAL_OUTPUT="on"
  export TME_STATUS_TERMINAL_OUTPUT

# Parallel loading system configuration
declare -g PARALLEL_LOADING_ENABLED PARALLEL_LOADING_FALLBACK
PARALLEL_LOADING_ENABLED="${PARALLEL_LOADING_ENABLED:-on}"    # "on" for parallel, "off" for sequential
PARALLEL_LOADING_FALLBACK="${PARALLEL_LOADING_FALLBACK:-on}"  # "on" to enable fallback, "off" to fail fast
export PARALLEL_LOADING_ENABLED PARALLEL_LOADING_FALLBACK
