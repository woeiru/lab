!/bin/bash

# Enable debug mode
#set -x

source_file() {
  local file_path="$1"
  if [ -f "$file_path" ]; then
    source "$file_path"
  else
    echo "Error: $file_path not found."
  fi
}

setup_source() {
  local dir="$1"
  local file="$2"
  local base="$3"

  local lib_dir="${dir%/*}/lib"
  local var_dir="${dir%/*}/var"
  local all_base="all"
 
  local files_to_source=(
    "$lib_dir/${all_base}.bash"
    "$var_dir/${all_base}.conf"
    "$lib_dir/${base}.bash"
    "$var_dir/${base}.conf"
  )

  for file in "${files_to_source[@]}"; do
    source "$file"
    echo "sourced $file"
  done
}

setup_main() {
    if [ "$#" -eq 0 ]; then
        echo "setup_main called without arguments"
        setup_display_menu "$DIR_SH" "$FILE_SH"
        setup_read_choice
    else
        echo "setup_main called with arguments: $@"
        setup_execute_arguments "$@"
    fi
}

setup_read_choice() {
    read -p "Enter your choice: " choice
    choice=$(echo "$choice" | xargs)  # Trim leading/trailing whitespace
    setup_execute_choice "$choice"
}

setup_execute_arguments() {
    for arg in "$@"; do
        setup_execute_choice "$arg"
    done
}

setup_execute_choice() {
    local choice="$1"
    local func="${MENU_OPTIONS[$choice]}"
    echo "function '$func' executed"
    if [[ -n "$func" ]]; then
        $func
    else
        echo "Invalid choice"
    fi
}

# Function to expand variables
expand_variables() {
    local line="$1"
    local expanded_line="$line"
    
    local vars=$(echo "$line" | grep -o '\<[a-zA-Z_][a-zA-Z0-9_]*\>')
    
    for var in $vars; do
        if [[ -v $var ]]; then
            local value="${!var}"
            expanded_line="${expanded_line//$var/$var = $value}"
        fi
    done
    
    echo "$expanded_line"
}

# Function to get function description
get_function_description() {
    local func_name="$1"
    local lib_name="${func_name%%-*}"
    local lib_file="/root/lab/lib/${lib_name}.bash"
    
    if [ ! -f "$lib_file" ]; then
        return
    fi
    
    local description=$(awk -v fn="$func_name" '
        $0 ~ "^"fn"\\(\\)" {
            if (NR > 2) print lines[NR-3];
            exit;
        }
        {
            lines[NR] = $0;
        }
    ' "$lib_file" | sed 's/^# *//')
    
    if [ -n "$description" ]; then
        echo "----(( $description ))----"
    fi
}

setup_display_menu() {
    local dir="$1"
    local file="$2"

    echo "Choose display option:"
    echo "1. Code"
    echo "2. Code with expanded variables"
    echo "3. Code with expanded function descriptions"
    echo "4. Code with expanded variables & function descriptions"
    read -p "Enter your choice (1, 2, 3 or 4): " display_choice

    echo "----------------------------------------------------------------------"
    echo "------------  Scanning file $file for *_xall functions  -------------"
    echo "                                                            "
    echo "--------------------->>(  Choose an option  )<<-----------------------"
    echo "                                                            "

    grep -E '^[a-zA-Z_]+_xall\(\)' "$dir/$file" | while IFS= read -r line; do
        func_name=$(echo "$line" | awk -F'(' '{print $1}')
        echo "----------------------------->>(  ${func_name%%_xall}  )<<------------------------------"
        echo ""

        in_function=false
        first_line=true
        while IFS= read -r inner_line; do
            if $first_line; then
                first_line=false
                in_function=true
                continue
            fi
            if [[ "$inner_line" == "}" ]]; then
                in_function=false
                echo ""
            elif $in_function; then
                case "$display_choice" in
                    1)
                        echo "$inner_line"
                        ;;
                    2)
                        echo "$(expand_variables "$inner_line")"
                        ;;
                    3)
                        if [[ "$inner_line" =~ ^[[:space:]]*([a-zA-Z_-]+) ]]; then
                            local func="${BASH_REMATCH[1]}"
                            local desc="$(get_function_description "$func")"
                            echo "${inner_line} $desc"
                        else
                            echo "$inner_line"
                        fi
                        ;;
		   4)
                        if [[ "$inner_line" =~ ^[[:space:]]*([a-zA-Z_-]+) ]]; then
                            local func="${BASH_REMATCH[1]}"
                            local desc="$(get_function_description "$func")"
                            echo "$(expand_variables "$inner_line") $desc"
                        else
                            echo "$(expand_variables "$inner_line")"
                        fi
                        ;;

                esac
            fi
        done < <(sed -n "/^${func_name}()/,/^}/p" "$dir/$file")
    done
    echo "----------------------------------------------------------------------"
    echo ""
}

# Disable debug mode
set +x
