#!/bin/bash

source_file() {
  local file_path="$1"
  if [ -f "$file_path" ]; then
    source "$file_path"
  else
    echo "Error: $file_path not found."
  fi
}

setup_source() {
  local dir="$1"
  local file="$2"
  local base="${file%.*}"
  local lib_dir="${dir%/*}/lib"
  local var_dir="${dir%/*}/var"
  local all_base="all"
 
  local files_to_source=(
    "$lib_dir/${all_base}.bash"
    "$var_dir/${all_base}.conf"
    "$lib_dir/${base}.bash"
    "$var_dir/${base}.conf"
  )

  for file in "${files_to_source[@]}"; do
    source_file "$file"
  done
}

setup_main() {
    echo "Debug: setup_main called with arguments: $@"
    if [ "$#" -eq 0 ]; then
        setup_display_menu "$DIR" "$FILE"
        setup_read_choice
    else
        setup_execute_arguments "$@"
    fi
}

setup_read_choice() {
    read -p "Enter your choice: " choice
    choice=$(echo "$choice" | xargs)  # Trim leading/trailing whitespace
    setup_execute_choice "$choice"
}

setup_execute_arguments() {
    for arg in "$@"; do
        setup_execute_choice "$arg"
    done
}

setup_execute_choice() {
    local choice="$1"
    echo "Debug: choice = '$choice'"
    echo "Debug: MENU_OPTIONS = ${!MENU_OPTIONS[@]}"
    echo "Debug: MENU_OPTIONS values = ${MENU_OPTIONS[@]}"
    
    local func="${MENU_OPTIONS[$choice]}"
    echo "Debug: func = '$func'"
    if [[ -n "$func" ]]; then
        $func
    else
        echo "Invalid choice"
    fi
}

setup_display_menu() {
    local dir="$1"
    local file="$2"

    echo "Choose an option:"
    echo "Debug: Scanning file $dir/$file for *_xall functions"
    
    # Find all *_xall functions in the given file
    grep -E '^[a-zA-Z_]+_xall\(\)' "$dir/$file" | while read -r line; do
        # Extract the function name
        func_name=$(echo "$line" | awk -F'(' '{print $1}')
        echo "Debug: Found function $func_name"
        echo "${func_name%%_xall}......................( include config )"
        
        # List all the functions called within this *_xall function
        echo "Debug: Scanning function body of $func_name"
        sed -n "/^${func_name}()/,/^}/p" "$dir/$file" | while read -r inner_line; do
            echo "Debug: Processing line: $inner_line"
            inner_func=$(echo "$inner_line" | grep -oE '^[[:space:]]*[a-zA-Z_]+\(' | awk '{print $1}' | sed 's/(//')
            if [[ -n "$inner_func" ]]; then
                echo "  - $inner_func"
            fi
        done
    done
    echo ""
}

