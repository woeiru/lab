#!/bin/bash

source_file() {
  local file_path="$1"
  if [ -f "$file_path" ]; then
    source "$file_path"
  else
    echo "Error: $file_path not found."
  fi
}

setup_source() {
  local dir="$1"
  local file="$2"
  local base="$3"

  local lib_dir="${dir%/*}/lib"
  local var_dir="${dir%/*}/var"
  local all_base="all"
 
  local files_to_source=(
    "$lib_dir/${all_base}.bash"
    "$var_dir/${all_base}.conf"
    "$lib_dir/${base}.bash"
    "$var_dir/${base}.conf"
  )

  for file in "${files_to_source[@]}"; do
    source "$file"
    echo "sourced $file"
  done
}

setup_main() {

    if [ "$#" -eq 0 ]; then
        echo "setup_main called without arguments"
        setup_display_menu "$DIR_SH" "$FILE_SH"
        setup_read_choice
    else
        echo "setup_main called with arguments: $@"
        setup_execute_arguments "$@"
    fi
}

setup_read_choice() {
    read -p "Enter your choice: " choice
    choice=$(echo "$choice" | xargs)  # Trim leading/trailing whitespace
    setup_execute_choice "$choice"
}

setup_execute_arguments() {
    for arg in "$@"; do
        setup_execute_choice "$arg"
    done
}

setup_execute_choice() {
    local choice="$1"
    local func="${MENU_OPTIONS[$choice]}"
    echo "function '$func' executed"
    if [[ -n "$func" ]]; then
        $func
    else
        echo "Invalid choice"
    fi
}

setup_display_menu() {
    local dir="$1"
    local file="$2"

    echo "------------------------------------------------------------"
    echo "-------  Scanning file $file for *_xall functions  --------"
    echo "                                                            "
    echo "---------------->>(  Choose an option  )<<------------------"
    echo "                                                            "

    # Find all *_xall functions in the given file
    grep -E '^[a-zA-Z_]+_xall\(\)' "$dir/$file" | while read -r line; do
        # Extract the function name
        func_name=$(echo "$line" | awk -F'(' '{print $1}')
        echo "------------------------>>(  ${func_name%%_xall}  )<<-------------------------"
        echo ""
        # List all the functions called within this *_xall function
        in_function=false
        first_line=true
        sed -n "/^${func_name}()/,/^}/p" "$dir/$file" | while read -r inner_line; do
            if $first_line; then
                first_line=false
                in_function=true
                continue
            fi
            if [[ "$inner_line" == "}" ]]; then
                in_function=false
                echo ""
            elif $in_function; then
                inner_func=$(echo "$inner_line" | grep -oE '^[[:space:]]*[a-zA-Z_]+\(' | awk '{print $1}' | sed 's/(//')
                if [[ -n "$inner_func" && "$inner_func" != "$func_name" ]]; then
                    echo "  - $inner_func"
                else
                    echo "$inner_line"
                fi
            fi
        done
    done
    echo ""
}
