#!/bin/bash
#
# =============================================================================
# Dynamic Alias Generation Script (cfg-ali) - Completely Rewritten
# =============================================================================

set -euo pipefail

# Determine LAB_DIR
if [[ -z "${LAB_DIR:-}" ]]; then
    SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
    LAB_DIR="$(dirname "$SCRIPT_DIR")"
    export LAB_DIR
fi

# Source configuration
if [[ -f "$LAB_DIR/cfg/core/ric" ]]; then
    source "$LAB_DIR/cfg/core/ric"
else
    echo "Error: Could not source cfg/core/ric"
    exit 1
fi

# Initialize output file
OUTPUT_FILE="$CFG_ALI_DIR/dyn"
mkdir -p "$CFG_ALI_DIR"

cat > "$OUTPUT_FILE" << 'EOF'
# Dynamically generated aliases by cfg-ali-new
# Generated on: $(date)
# Version: 3.0.0 (Rewritten)

EOF

echo "Starting alias generation..."

# Generate README aliases using external commands to avoid hanging
echo "# --- README File Aliases ---" >> "$OUTPUT_FILE"

# Process README files one by one
for readme_file in $(find "$LAB_DIR" -type f -name "readme.md" 2>/dev/null); do
    if [[ -f "$readme_file" ]]; then
        dir=$(dirname "$readme_file")
        dir_name=$(basename "$dir")
        parent_dir=$(basename "$(dirname "$dir")")
        relative_path="${readme_file#$LAB_DIR/}"
        
        # Generate alias name
        if [[ "$parent_dir" != "lab" ]]; then
            alias_name="$parent_dir-$dir_name-md"
        else
            alias_name="$dir_name-md"
        fi
        
        # Write aliases directly
        echo "alias c-$alias_name='cat \"\$LAB_DIR/$relative_path\"'" >> "$OUTPUT_FILE"
        echo "alias v-$alias_name='vim \"\$LAB_DIR/$relative_path\"'" >> "$OUTPUT_FILE"
        
        echo "Created aliases for: $relative_path"
    fi
done

echo "" >> "$OUTPUT_FILE"

# Generate directory navigation aliases
echo "# --- Directory Navigation Aliases ---" >> "$OUTPUT_FILE"

for dir in "$LAB_DIR"/*; do
    if [[ -d "$dir" ]]; then
        base_name=$(basename "$dir")
        echo "alias d-$base_name='cd \"\$LAB_DIR/$base_name\"'" >> "$OUTPUT_FILE"
        echo "Created directory alias: d-$base_name"
    fi
done

echo "" >> "$OUTPUT_FILE"

# Generate environment file aliases if directory exists
if [[ -d "$CFG_ENV_DIR" ]]; then
    echo "# --- Environment File Aliases ---" >> "$OUTPUT_FILE"
    
    for env_file in "$CFG_ENV_DIR"/*; do
        if [[ -f "$env_file" ]]; then
            base_name=$(basename "$env_file")
            relative_path="${env_file#$LAB_DIR/}"
            echo "alias c.env.$base_name='cat \"\$LAB_DIR/$relative_path\"'" >> "$OUTPUT_FILE"
            echo "alias v.env.$base_name='vim \"\$LAB_DIR/$relative_path\"'" >> "$OUTPUT_FILE"
            echo "Created env aliases for: $base_name"
        fi
    done
    
    echo "" >> "$OUTPUT_FILE"
fi

# Generate library operation aliases if directory exists
if [[ -d "$LIB_OPS_DIR" ]]; then
    echo "# --- Library Operation Aliases ---" >> "$OUTPUT_FILE"
    
    for ops_file in "$LIB_OPS_DIR"/*; do
        if [[ -f "$ops_file" ]]; then
            base_name=$(basename "$ops_file")
            relative_path="${ops_file#$LAB_DIR/}"
            echo "alias c.ops.$base_name='cat \"\$LAB_DIR/$relative_path\"'" >> "$OUTPUT_FILE"
            echo "alias v.ops.$base_name='vim \"\$LAB_DIR/$relative_path\"'" >> "$OUTPUT_FILE"
            echo "Created ops aliases for: $base_name"
        fi
    done
    
    echo "" >> "$OUTPUT_FILE"
fi

# Generate source set aliases if directory exists
if [[ -d "$SRC_SET_DIR" ]]; then
    echo "# --- Source Set Script Aliases ---" >> "$OUTPUT_FILE"
    
    for set_file in "$SRC_SET_DIR"/*; do
        if [[ -f "$set_file" ]]; then
            base_name=$(basename "$set_file")
            relative_path="${set_file#$LAB_DIR/}"
            echo "alias c.set.$base_name='cat \"\$LAB_DIR/$relative_path\"'" >> "$OUTPUT_FILE"
            echo "alias v.set.$base_name='vim \"\$LAB_DIR/$relative_path\"'" >> "$OUTPUT_FILE"
            
            # Add bash alias if file is executable
            if [[ -x "$set_file" ]]; then
                echo "alias b.set.$base_name='bash \"\$LAB_DIR/$relative_path\"'" >> "$OUTPUT_FILE"
            fi
            
            echo "Created set aliases for: $base_name"
        fi
    done
    
    echo "" >> "$OUTPUT_FILE"
fi

echo "Alias generation completed successfully!"
echo "Generated aliases written to: $OUTPUT_FILE"
echo ""
echo "To use the aliases, source the file:"
echo "  source $OUTPUT_FILE"