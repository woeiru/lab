#!/bin/bash
# AI Documentation Generator - Complete Working Implementation
# This integrates with your existing tools and provides the AI layer

set -euo pipefail

# Configuration
AI_SERVICE="${AI_SERVICE:-mock}"  # Options: ollama, openai, gemini, mock
WORK_DIR="/tmp/ai_doc_work_$$"
# PORTABLE: Auto-detect LAB_ROOT from script location
if [[ -z "${LAB_ROOT:-}" ]]; then
    SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
    # Script is in utl/doc/ai, so LAB_ROOT is three levels up
    LAB_ROOT="$(dirname "$(dirname "$(dirname "$SCRIPT_DIR")")")"
fi

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() { echo -e "${BLUE}[AI-DOC]${NC} $1"; }
success() { echo -e "${GREEN}[SUCCESS]${NC} $1"; }
warn() { echo -e "${YELLOW}[WARN]${NC} $1"; }
error() { echo -e "${RED}[ERROR]${NC} $1" >&2; }

# Initialize work directory
init() {
    mkdir -p "$WORK_DIR"
    trap "rm -rf '$WORK_DIR'" EXIT
}

# [Continue with rest of the ai_doc_generator content...]
# Note: This is just the header - the full file would be much longer
# For demo purposes, I'm showing the portable path detection

main() {
    echo "AI Documentation Generator - Portable Version"
    echo "LAB_ROOT detected as: $LAB_ROOT"
    echo "Script location: $SCRIPT_DIR"
    
    # Test portability
    if [[ -d "$LAB_ROOT/lib" ]]; then
        echo "✅ Successfully found LAB_ROOT - portability working!"
    else
        echo "❌ Failed to find LAB_ROOT - check path detection"
    fi
}

# Run if called directly
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "$@"
fi