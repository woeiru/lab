#!/bin/bash
#######################################################################
# Lab Environment Variable Usage Documentation Generator
#######################################################################
# File: var
# Description: Automatic variable usage documentation generator that populates 
#              the variable usage table in doc/dev/variables.md using 
#              aux_ffl and ana_acu to extract variable information from cfg/env, lib/ops, and src/set directories
#
# Usage: ./var
#   (default)   Updates the variable usage table in doc/dev/variables.md
#######################################################################

set -e

# Initialize lab environment
readonly SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Set LAB_DIR if not already set - PORTABLE for generators subfolder
if [[ -z "${LAB_DIR:-}" ]]; then
    # Script is now in utl/doc/generators, so LAB_DIR is three levels up
    readonly LAB_DIR="$(dirname "$(dirname "$(dirname "$SCRIPT_DIR")")")"
fi

# Source required utilities
source "$LAB_DIR/lib/gen/aux"
source "$LAB_DIR/lib/gen/ana"

# Load targets configuration
TARGETS_FILE="$(dirname "$SCRIPT_DIR")/config/targets"
if [[ -f "$TARGETS_FILE" ]]; then
    source "$TARGETS_FILE"
else
    echo "Warning: targets file not found at $TARGETS_FILE"
    # Fallback to default directories
    TARGET_DIRECTORIES=("cfg/env" "lib/ops" "src/set")
fi

# Get output file from configuration
if [[ -n "${GENERATOR_OUTPUT_FILES[var]:-}" ]]; then
    DOC_FILE="$LAB_DIR/${GENERATOR_OUTPUT_FILES[var]}"
else
    # Fallback to default
    DOC_FILE="$LAB_DIR/doc/dev/variables.md"
fi

# Main function
main() {
    echo "Variable Generator - Using targets configuration"
    echo "LAB_DIR detected as: $LAB_DIR"
    echo "Target directories: ${TARGET_DIRECTORIES[*]}"
    
    # Process each target directory for variable analysis
    for target_dir in "${TARGET_DIRECTORIES[@]}"; do
        local full_path="$LAB_DIR/$target_dir"
        if [[ -d "$full_path" ]]; then
            echo "Processing variables in: $target_dir"
            # Use ana_acu for variable usage analysis
            if command -v ana_acu >/dev/null 2>&1; then
                ana_acu "$full_path" || echo "Warning: ana_acu failed for $target_dir"
            else
                echo "Warning: ana_acu not available, skipping $target_dir"
            fi
        else
            echo "Warning: Target directory not found: $target_dir"
        fi
    done
    
    echo "Variable documentation generation complete."
}

# Execute main function
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "$@"
fi