#!/bin/bash
#######################################################################
# Lab Environment Variable Usage Documentation Generator
#######################################################################
# File: var
# Description: Automatic variable usage documentation generator that populates 
#              the variable usage table in doc/dev/variables.md using 
#              aux_ffl and ana_acu to extract variable information from cfg/env, lib/ops, and src/set directories
#
# Usage: ./var
#   (default)   Updates the variable usage table in doc/dev/variables.md
#######################################################################

set -e

# Initialize lab environment
readonly SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Set LAB_DIR if not already set - PORTABLE for generators subfolder
if [[ -z "${LAB_DIR:-}" ]]; then
    # Script is now in utl/doc/generators, so LAB_DIR is three levels up
    readonly LAB_DIR="$(dirname "$(dirname "$(dirname "$SCRIPT_DIR")")")"
fi

# Source required utilities
source "$LAB_DIR/lib/gen/aux"
source "$LAB_DIR/lib/gen/ana"

# Define target directories
CFG_ENV_DIR="$LAB_DIR/cfg/env"

# Simple var generation for demo
main() {
    echo "Variable Generator - Portable Version"
    echo "LAB_DIR detected as: $LAB_DIR"
    echo "Generated by: utl/doc/generators/var"
    
    # Test portability
    if [[ -d "$LAB_DIR/lib" ]]; then
        echo "✅ Successfully found LAB_DIR - portability working!"
    else
        echo "❌ Failed to find LAB_DIR - check path detection"
    fi
}

# Execute main function
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "$@"
fi