#!/bin/bash

# Define the directory of the script using a POSIX-compliant method
DIR="$(cd "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" >/dev/null 2>&1 && pwd)"
PARENT_DIR="/root/lab"

# Main sourcing function for env files
source_arrangement_env() {
    log "lvl-1" "Starting ${FUNCNAME[0]} ()"

    # Source env modules
    local env_modules=("env2")
    log "lvl-2" "Sourcing files $env_var_name(${env_modules[*]})"
    for module in "${env_modules[@]}"; do
        source_helper "$DIR/$module"
    done

    log "lvl-2" "All env modules sourced successfully"
}

# Main execution setup for env files
execution_arrangement_env() {
    log "lvl-1" "Starting ${FUNCNAME[0]} ()"
    # Check if required functions exist before calling them
    local required_functions=("set_ssh")
    for func in "${required_functions[@]}"; do
        if type "$func" &>/dev/null; then
            log "lvl-2" "Executing $func"
            $func
        else
            log "lvl-2" "Warning: $func function not found." | tee -a "$ERROR_LOG" >&2
        fi
    done
}

# Main execution
mod_env() {
    source_arrangement_env
    execution_arrangement_env

    # Set environment variable to indicate successful env setup
    export LABS_ENV_SOURCED=1

    # Final check
    if [[ -z "${LABS_ENV_SOURCED}" ]]; then
        log "lvl-1" "Error: Environment sourcing failed." | tee -a "$ERROR_LOG" >&2
        return 1
    else
        log "lvl-1" "Env setup completed successfully."
    fi
}
