# dyn - Dynamic bash module
# This file contains functions for generating dynamic aliases and arrays

generate_dynamic_aliases() {
    generate_top_level_aliases
    generate_dynamic_arrays
    generate_readme_aliases

    # Use the dynamically generated arrays
    for array_name in lib_files var_files set_files; do
        if [[ ${#array_name[@]} -gt 0 ]]; then
            generate_aliases "cat" "${!array_name[@]}"
            generate_aliases "vim" "${!array_name[@]}"
        fi
    done

    if [[ ${#set_files[@]} -gt 0 ]]; then
        generate_aliases "bash" "${set_files[@]}"
    fi

    # Source dynamically generated scripts
    if [[ ${#lib_files[@]} -gt 0 ]]; then
        source_scripts "${lib_files[@]}"
    fi
}

generate_top_level_aliases() {
    for dir in "$PARENT_DIR"/*; do
        if [[ -d "$dir" ]]; then
            base=$(basename "$dir")
            if [[ ${#base} -eq 3 ]]; then
                var_name="${base^^}_DIR"
                dir_path=$(realpath "$dir")
                declare -g "$var_name=$dir_path"
                alias "d.$base=cd $dir_path"
            fi
        fi
    done
}

generate_dynamic_arrays() {
    local generation_folders=(lib set var)

    for folder in "${generation_folders[@]}"; do
        local dir_path="$PARENT_DIR/$folder"
        if [[ -d "$dir_path" ]]; then
            local array_name="${folder}_files"
            local files=()
            while IFS= read -r -d '' file; do
                base_name=$(basename "$file")
                name_without_ext="${base_name%.*}"
                files+=("$name_without_ext")
            done < <(find "$dir_path" -maxdepth 1 -type f \( -name "*.bash" -o -name "*.sh" -o -name "*.conf" \) -print0)

            IFS=$'\n' sorted_unique=($(sort -u <<<"${files[*]}"))
            unset IFS

            eval "$array_name=(${sorted_unique[*]})"
        fi
    done
}

generate_readme_aliases() {
    local FILEBASE_MD="readme.md"
    while IFS= read -r -d '' file; do
        dir=$(dirname "$file")
        alias_name=$(basename "$dir").md
        alias "c.$alias_name=cat $file"
        alias "v.$alias_name=vim $file"
    done < <(find "$PARENT_DIR" -type f -name "$FILEBASE_MD" -print0)
}

generate_aliases() {
    local alias_type=$1
    shift
    local files=("$@")

    for file in "${files[@]}"; do
        case "$alias_type" in
            "bash")
                alias "b_${file}_sh=bash $SET_DIR/$file.sh"
                ;;
            "cat")
                alias "c_${file}_bash=cat $LIB_DIR/$file.bash"
                alias "c_${file}_sh=cat $SET_DIR/$file.sh"
                alias "c_${file}_conf=cat $VAR_DIR/$file.conf"
                ;;
            "vim")
                alias "v_${file}_bash=vim $LIB_DIR/$file.bash"
                alias "v_${file}_sh=vim $SET_DIR/$file.sh"
                alias "v_${file}_conf=vim $VAR_DIR/$file.conf"
                ;;
        esac
    done
}

source_scripts() {
    local files=("$@")
    for file in "${files[@]}"; do
        local script_path="$LIB_DIR/$file.bash"
        if [[ -f "$script_path" ]]; then
            source "$script_path"
        fi
    done
}
